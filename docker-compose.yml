services:
  db:
    image: postgres:16
    container_name: consulta-creditos-db
    environment:
      POSTGRES_DB: creditosdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d creditosdb"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped
    networks:
      - consulta-net

  consulta-creditos-api:
    build:
      context: ./consulta-creditos-api
      dockerfile: Dockerfile
    container_name: consulta-creditos-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/creditosdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SERVER_PORT: 8080
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - consulta-net

  consulta-creditos-web:
    build:
      context: ./consulta-creditos-web
      dockerfile: Dockerfile
    container_name: consulta-creditos-web
    ports:
      - "8081:80"   # <â€” corrige para 8081:80 (Nginx escuta 80)
    depends_on:
      - consulta-creditos-api
    networks:
      - consulta-net

volumes:
  dbdata:

networks:
  consulta-net: {}
